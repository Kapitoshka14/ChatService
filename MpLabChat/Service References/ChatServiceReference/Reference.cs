//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34014
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MpLabChat.ChatServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatServiceReference.IChatService")]
    public interface IChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Vhod", ReplyAction="http://tempuri.org/IChatService/VhodResponse")]
        bool Vhod(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Vhod", ReplyAction="http://tempuri.org/IChatService/VhodResponse")]
        System.Threading.Tasks.Task<bool> VhodAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Vihod", ReplyAction="http://tempuri.org/IChatService/VihodResponse")]
        void Vihod(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Vihod", ReplyAction="http://tempuri.org/IChatService/VihodResponse")]
        System.Threading.Tasks.Task VihodAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Spiski", ReplyAction="http://tempuri.org/IChatService/SpiskiResponse")]
        MpLabChat.ChatServiceReference.SpiskiResponse Spiski(MpLabChat.ChatServiceReference.SpiskiRequest request);
        
        // CODEGEN: Идет формирование контракта на сообщение, так как операция может иметь много возвращаемых значений.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Spiski", ReplyAction="http://tempuri.org/IChatService/SpiskiResponse")]
        System.Threading.Tasks.Task<MpLabChat.ChatServiceReference.SpiskiResponse> SpiskiAsync(MpLabChat.ChatServiceReference.SpiskiRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/CreatSpisok", ReplyAction="http://tempuri.org/IChatService/CreatSpisokResponse")]
        bool CreatSpisok(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/CreatSpisok", ReplyAction="http://tempuri.org/IChatService/CreatSpisokResponse")]
        System.Threading.Tasks.Task<bool> CreatSpisokAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/ClickSpisok", ReplyAction="http://tempuri.org/IChatService/ClickSpisokResponse")]
        string[] ClickSpisok(string name, int razm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/ClickSpisok", ReplyAction="http://tempuri.org/IChatService/ClickSpisokResponse")]
        System.Threading.Tasks.Task<string[]> ClickSpisokAsync(string name, int razm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/DelSpisok", ReplyAction="http://tempuri.org/IChatService/DelSpisokResponse")]
        void DelSpisok(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/DelSpisok", ReplyAction="http://tempuri.org/IChatService/DelSpisokResponse")]
        System.Threading.Tasks.Task DelSpisokAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Chat", ReplyAction="http://tempuri.org/IChatService/ChatResponse")]
        void Chat(string name, string enter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Chat", ReplyAction="http://tempuri.org/IChatService/ChatResponse")]
        System.Threading.Tasks.Task ChatAsync(string name, string enter);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Spiski", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SpiskiRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] logins;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] names;
        
        public SpiskiRequest() {
        }
        
        public SpiskiRequest(string[] logins, string[] names) {
            this.logins = logins;
            this.names = names;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SpiskiResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SpiskiResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] logins;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] names;
        
        public SpiskiResponse() {
        }
        
        public SpiskiResponse(string[] logins, string[] names) {
            this.logins = logins;
            this.names = names;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceChannel : MpLabChat.ChatServiceReference.IChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.ClientBase<MpLabChat.ChatServiceReference.IChatService>, MpLabChat.ChatServiceReference.IChatService {
        
        public ChatServiceClient() {
        }
        
        public ChatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Vhod(string login) {
            return base.Channel.Vhod(login);
        }
        
        public System.Threading.Tasks.Task<bool> VhodAsync(string login) {
            return base.Channel.VhodAsync(login);
        }
        
        public void Vihod(string login) {
            base.Channel.Vihod(login);
        }
        
        public System.Threading.Tasks.Task VihodAsync(string login) {
            return base.Channel.VihodAsync(login);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MpLabChat.ChatServiceReference.SpiskiResponse MpLabChat.ChatServiceReference.IChatService.Spiski(MpLabChat.ChatServiceReference.SpiskiRequest request) {
            return base.Channel.Spiski(request);
        }
        
        public void Spiski(ref string[] logins, ref string[] names) {
            MpLabChat.ChatServiceReference.SpiskiRequest inValue = new MpLabChat.ChatServiceReference.SpiskiRequest();
            inValue.logins = logins;
            inValue.names = names;
            MpLabChat.ChatServiceReference.SpiskiResponse retVal = ((MpLabChat.ChatServiceReference.IChatService)(this)).Spiski(inValue);
            logins = retVal.logins;
            names = retVal.names;
        }
        
        public System.Threading.Tasks.Task<MpLabChat.ChatServiceReference.SpiskiResponse> SpiskiAsync(MpLabChat.ChatServiceReference.SpiskiRequest request) {
            return base.Channel.SpiskiAsync(request);
        }
        
        public bool CreatSpisok(string name) {
            return base.Channel.CreatSpisok(name);
        }
        
        public System.Threading.Tasks.Task<bool> CreatSpisokAsync(string name) {
            return base.Channel.CreatSpisokAsync(name);
        }
        
        public string[] ClickSpisok(string name, int razm) {
            return base.Channel.ClickSpisok(name, razm);
        }
        
        public System.Threading.Tasks.Task<string[]> ClickSpisokAsync(string name, int razm) {
            return base.Channel.ClickSpisokAsync(name, razm);
        }
        
        public void DelSpisok(string name) {
            base.Channel.DelSpisok(name);
        }
        
        public System.Threading.Tasks.Task DelSpisokAsync(string name) {
            return base.Channel.DelSpisokAsync(name);
        }
        
        public void Chat(string name, string enter) {
            base.Channel.Chat(name, enter);
        }
        
        public System.Threading.Tasks.Task ChatAsync(string name, string enter) {
            return base.Channel.ChatAsync(name, enter);
        }
    }
}
